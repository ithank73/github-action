name: DEV DEPLOY

on:
  workflow_dispatch:
    inputs:
      NPM_INSTALL:
        type: boolean
        default: false
        description: NPM_INSTALL
      NPM_BUILD:
        type: boolean
        default: false
        description: NPM_BUILD
      COMPOSER_INSTALL:
        type: boolean
        default: false
        description: COMPOSER_INSTALL
      DB_MIGRATION:
        type: boolean
        default: false
        description: DB_MIGRATION
jobs:
  work_flow_build:
    runs-on: ubuntu-latest
    #    if: ${{ (github.event_name == 'workflow_dispatch') && (github.event.inputs.NPM_BUILD) }}
    steps:
  #      - name: Checkout source code.   # 레포지토리 체크아웃
  #        if: github.event.inputs.NPM_BUILD
  #        uses: actions/checkout@master
  #        with:
  #          token: ${{ secrets.PUSH_TOKEN }}
  #      - name: Set up Node
  #        if: github.event.inputs.NPM_BUILD
  #        uses: actions/setup-node@v1
  #        with:
  #          node-version: '12.x'
  #      - name: Install Dependencies    # 의존 파일 설치
  #        if: github.event.inputs.NPM_BUILD
  #        run: npm install
  #      - name: Install Dependencies    # 빌드
  #        if: github.event.inputs.NPM_BUILD
  #        run: npm run production
  #      - name: Transfer Deploy Script use SCP
  #        if: github.event.inputs.NPM_BUILD
  #        uses: appleboy/scp-action@master
  #        with:
  #          host: ${{ secrets.SSH_SERVER }}
  #          username: ${{ secrets.SSH_NAME }}
  #          password: ${{ secrets.SSH_PASSWORD }}
  #          port: ${{ secrets.SSH_PORT }}
  #          source: "public"
  #          target: "/home/people_l7/master/public/dist"
  workflow_ci:
    needs: work_flow_build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to production
        uses: appleboy/ssh-action@master
        env:
          COMPOSER_INSTALL: ${{ github.event.inputs.COMPOSER_INSTALL }}
          NPM_INSTALL:  ${{ github.event.inputs.NPM_INSTALL }}
          #          NPM_BUILD: ${{ github.event.inputs.NPM_BUILD }}
          DB_MIGRATION: ${{ github.event.inputs.DB_MIGRATION }}
        with:
          host: ${{ secrets.SSH_SERVER }}
          username: ${{ secrets.SSH_NAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          envs: COMPOSER_INSTALL,NPM_INSTALL,NPM_BUILD,DB_MIGRATION
          script: |
            cd ${{ secrets.MASTER_PATH }}
            echo ${GITHUB_REF#refs/heads/}
#            ../ci.sh
